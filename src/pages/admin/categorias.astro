---
import AdminLayout from '../../layouts/AdminLayout.astro';
import CategoryFormDialog from '../../components/admin/CategoryFormDialog.astro';
import { supabase } from '../../lib/supabase';

const { data: categorias } = await supabase
  .from('categorias')
  .select('*')
  .order('nome');

const categoriasComContagem = await Promise.all(
  (categorias || []).map(async (cat) => {
    const { count } = await supabase
      .from('produtos')
      .select('*', { count: 'exact', head: true })
      .eq('categoria_id', cat.id);
    return { ...cat, produtos_count: count || 0 };
  })
);
---

<AdminLayout title="Categorias">
  <div class="flex flex-col">
    <div class="flex min-h-[64px] items-center justify-between border-b border-[#2a2a2a] bg-[#0a0a0a] px-4 py-3 md:px-6">
      <div class="min-w-0 flex-1">
        <h1 class="truncate text-lg font-bold text-white md:text-xl">Categorias</h1>
      </div>
      <button
        id="add-category-btn"
        class="rounded-lg bg-white px-4 py-2 text-sm font-medium text-black transition hover:bg-[#e0e0e0]"
      >
        Nova
      </button>
    </div>

    <div class="flex-1 p-4 md:p-6">
      {!categoriasComContagem || categoriasComContagem.length === 0 ? (
        <div class="rounded-lg border border-[#2a2a2a] bg-[#0a0a0a] p-12 text-center">
          <h3 class="text-lg font-medium text-white">Nenhuma categoria</h3>
          <button
            onclick="window.openCategoryDialog()"
            class="mt-4 rounded-lg bg-white px-4 py-2 text-sm font-medium text-black"
          >
            Nova Categoria
          </button>
        </div>
      ) : (
        <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
          {categoriasComContagem.map((cat) => (
            <div class="rounded-lg border border-[#2a2a2a] bg-[#0a0a0a] p-6">
              <div class="flex items-start justify-between">
                <div class="flex-1 min-w-0">
                  <h3 class="text-lg font-semibold text-white truncate">{cat.nome}</h3>
                  <p class="mt-1 text-sm text-[#a0a0a0]">
                    {cat.produtos_count} produto{cat.produtos_count !== 1 ? 's' : ''}
                  </p>
                </div>
                <div class="flex gap-2 ml-2">
                  <button
                    class="rounded-lg bg-white/10 p-2 text-white hover:bg-white/20"
                    data-action="edit"
                    data-cat={JSON.stringify(cat)}
                  >
                    <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                    </svg>
                  </button>
                  <button
                    class="rounded-lg bg-red-500/10 p-2 text-red-500 hover:bg-red-500/20"
                    data-action="delete"
                    data-id={cat.id}
                    data-nome={cat.nome}
                  >
                    <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                    </svg>
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  </div>

  <CategoryFormDialog />
</AdminLayout>

<script>
  import { deletarCategoria } from '../../lib/crud';

  document.getElementById('add-category-btn')?.addEventListener('click', () => {
    window.openCategoryDialog();
  });

  document.querySelectorAll('[data-action="edit"]').forEach((btn) => {
    btn.addEventListener('click', (e) => {
      const cat = JSON.parse((e.currentTarget as HTMLElement).dataset.cat || '{}');
      window.openCategoryDialog(cat);
    });
  });

  document.querySelectorAll('[data-action="delete"]').forEach((btn) => {
    btn.addEventListener('click', async (e) => {
      const el = e.currentTarget as HTMLElement;
      const id = el.dataset.id;
      const nome = el.dataset.nome;
      
      if (!id || !confirm(`Deletar "${nome}"?`)) return;

      const result = await deletarCategoria(id);
      
      if (result.success) {
        window.showToast('Categoria deletada!', 'success');
        setTimeout(() => window.location.reload(), 300);
      } else {
        window.showToast(result.error || 'Erro ao deletar', 'error');
      }
    });
  });
</script>
