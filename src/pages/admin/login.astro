---
import Layout from '../../layouts/Layout.astro';
import '../../styles/pages/admin/login.css';
---

<Layout
  title="Admin Login - Sr. IPHONE VCA"
  description="√Årea administrativa do cat√°logo Sr. IPHONE VCA"
>
  <div class="login-page">
    <div class="login-container">
      <!-- Logo -->
      <div class="login-logo-section">
        <img
          src="/images/logo-fundo.webp"
          alt="Sr. IPHONE VCA"
          class="login-logo"
        />
        <h1 class="login-title">Admin - Sr. IPHONE VCA</h1>
        <p class="login-subtitle">√Årea administrativa do cat√°logo</p>
      </div>

      <!-- Login Form -->
      <div class="login-form-wrapper">
        <h2 class="login-form-title">Entrar no Painel</h2>

        <form id="login-form" class="login-form">
          <div class="login-form-group">
            <label for="email">Email</label>
            <input
              type="email"
              id="email"
              name="email"
              required
              placeholder="seu@email.com"
              autocomplete="email"
            />
          </div>

          <div class="login-form-group">
            <label for="password">Senha</label>
            <input
              type="password"
              id="password"
              name="password"
              required
              placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
              autocomplete="current-password"
            />
          </div>

          <div id="error-message" class="login-error-message"></div>

          <button type="submit" id="submit-btn" class="login-submit-btn">
            Entrar
          </button>
        </form>
      </div>

      <p class="login-footer">
        ¬© 2024 Sr. IPHONE VCA. Todos os direitos reservados.
      </p>
    </div>
  </div>
</Layout>

<script>
  import { authService } from '../../lib/supabase';

  // Verificar se j√° h√° uma sess√£o existente ao carregar a p√°gina
  (async () => {
    try {
      const isAuth = await authService.isAuthenticated();
      if (isAuth) {
        console.log('üîÅ Sess√£o detectada, redirecionando...');
        window.location.replace('/admin/dashboard');
      }
    } catch (error) {
      console.error('Erro ao verificar autentica√ß√£o:', error);
    }
  })();

  const form = document.getElementById('login-form') as HTMLFormElement;
  const errorMessage = document.getElementById(
    'error-message',
  ) as HTMLDivElement;
  const submitBtn = document.getElementById('submit-btn') as HTMLButtonElement;

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();

    const formData = new FormData(form);
    const email = formData.get('email') as string;
    const password = formData.get('password') as string;

    // Valida√ß√£o b√°sica
    if (!email || !password) {
      showError('Por favor, preencha todos os campos.');
      return;
    }

    // Hide error message
    hideError();

    // Disable button
    submitBtn.disabled = true;
    submitBtn.textContent = 'Entrando...';

    try {
      // 1. Fazer login usando o authService (salva no localStorage)
      await authService.signIn(email, password);

      // 2. Chamar API para salvar cookies no servidor
      const response = await fetch('/api/admin/auth/login', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        credentials: 'include',
        body: JSON.stringify({ email, password }),
      });

      if (!response.ok) {
        const error = await response.json();
        throw new Error(error.error || 'Erro ao fazer login');
      }

      // 3. Sucesso! Redirecionar para dashboard
      console.log('‚úÖ Login realizado com sucesso!');
      window.location.href = '/admin/dashboard';
    } catch (error: any) {
      console.error('Erro no login:', error);

      // Mensagens de erro mais amig√°veis
      let errorMsg = 'Erro ao fazer login. Verifique suas credenciais.';

      if (error.message?.includes('Invalid login credentials')) {
        errorMsg = 'Email ou senha incorretos.';
      } else if (error.message?.includes('Email not confirmed')) {
        errorMsg = 'Email n√£o confirmado. Verifique sua caixa de entrada.';
      } else if (error.message?.includes('Network')) {
        errorMsg = 'Erro de conex√£o. Verifique sua internet.';
      }

      showError(errorMsg);

      // Re-enable button
      submitBtn.disabled = false;
      submitBtn.textContent = 'Entrar';
    }
  });

  function showError(message: string) {
    errorMessage.textContent = message;
    errorMessage.classList.add('show');
  }

  function hideError() {
    errorMessage.textContent = '';
    errorMessage.classList.remove('show');
  }

  // Limpar erro ao digitar
  const inputs = form?.querySelectorAll('input');
  inputs?.forEach((input) => {
    input.addEventListener('input', hideError);
  });
</script>
