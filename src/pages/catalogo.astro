---
// src/pages/catalogo.astro
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import ProductCard from '../components/ProductCard.astro';
import ModalProduto from '../components/ModalProduto.astro';
import FormularioProduto from '../components/FormularioProduto.astro';
import GerirCategorias from '../components/GerirCategorias.astro';

// Importar produtos do store (lado servidor)
const produtos = [];
---

<Layout 
    title="Catálogo | Sr. IPHONE"
    description="Explore nossa seleção exclusiva de iPhones seminovos com garantia e qualidade certificada."
>
    <Header />
    
    <main class="catalogo-page">
        <section class="hero-catalogo">
            <div class="container">
                <div class="hero-content">
                    <div class="hero-text">
                        <span class="eyebrow">NOSSA COLEÇÃO</span>
                        <h1>Catálogo Exclusivo</h1>
                        <p>iPhones seminovos selecionados com garantia e qualidade certificada</p>
                    </div>
                    <div class="hero-actions">
                        <button id="btn-login" class="btn-admin">
                            <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M15 3H19C19.5304 3 20.0391 3.21071 20.4142 3.58579C20.7893 3.96086 21 4.46957 21 5V19C21 19.5304 20.7893 20.0391 20.4142 20.4142C20.0391 20.7893 19.5304 21 19 21H15M10 17L15 12L10 7M15 12H3" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            Entrar
                        </button>
                        <div id="admin-menu" class="admin-menu" style="display: none;">
                            <button id="btn-criar-produto" class="btn-admin-action">
                                <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M12 5V19M5 12H19" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                                </svg>
                                Criar Produto
                            </button>
                            <button id="btn-gerir-categorias" class="btn-admin-action">
                                <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M3 7H21M3 12H21M3 17H21" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                                </svg>
                                Gerir Categorias
                            </button>
                            <button id="btn-logout" class="btn-admin-action logout">
                                <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M9 21H5C4.46957 21 3.96086 20.7893 3.58579 20.4142C3.21071 20.0391 3 19.5304 3 19V5C3 4.46957 3.21071 3.96086 3.58579 3.58579C3.96086 3.21071 4.46957 3 5 3H9M16 17L21 12M21 12L16 7M21 12H9" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                </svg>
                                Sair
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <section class="produtos-grid">
            <div class="container">
                <div id="produtos-container" class="grid">
                    <!-- Produtos serão carregados aqui via JavaScript -->
                </div>
            </div>
        </section>
    </main>

    <!-- Modal de Login -->
    <div id="modal-login" class="modal-login">
        <div class="modal-overlay"></div>
        <div class="modal-content">
            <button class="modal-close" aria-label="Fechar">×</button>
            <h2>Login Administrativo</h2>
            <form id="form-login">
                <div class="form-group">
                    <label for="login-email">Email</label>
                    <input type="email" id="login-email" required />
                </div>
                <div class="form-group">
                    <label for="login-password">Senha</label>
                    <input type="password" id="login-password" required />
                </div>
                <button type="submit" class="btn-submit">Entrar</button>
            </form>
        </div>
    </div>

    <ModalProduto />
    <FormularioProduto />
    <GerirCategorias />
    <Footer />
</Layout>

<style>
    .catalogo-page {
        background-color: var(--cor-fundo-escuro);
        min-height: 100vh;
    }

    .hero-catalogo {
        padding: 4rem 1rem 3rem;
        border-bottom: 1px solid #1a1a1a;
    }

    .hero-content {
        display: flex;
        flex-direction: column;
        gap: 2rem;
    }

    .hero-text {
        text-align: center;
    }

    .eyebrow {
        display: inline-block;
        font-size: 0.75rem;
        letter-spacing: 0.15em;
        font-weight: 600;
        color: #666;
        margin-bottom: 1rem;
        text-transform: uppercase;
    }

    .hero-catalogo h1 {
        font-family: "Halenoir", sans-serif;
        font-size: 2.5rem;
        color: var(--cor-primaria);
        margin-bottom: 0.5rem;
    }

    .hero-catalogo p {
        color: #999;
        font-size: 1.1rem;
    }

    .hero-actions {
        display: flex;
        justify-content: center;
        gap: 1rem;
        flex-wrap: wrap;
    }

    .btn-admin {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        background: transparent;
        border: 1px solid #2a2a2a;
        color: #fff;
        padding: 0.75rem 1.5rem;
        border-radius: 10px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .btn-admin:hover {
        background: #fff;
        color: #000;
        border-color: #fff;
    }

    .btn-admin svg {
        width: 20px;
        height: 20px;
    }

    .admin-menu {
        display: flex;
        gap: 0.75rem;
        flex-wrap: wrap;
    }

    .btn-admin-action {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        background: #fff;
        border: none;
        color: #000;
        padding: 0.75rem 1.25rem;
        border-radius: 10px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .btn-admin-action:hover {
        background: #e5e5e5;
        transform: translateY(-2px);
    }

    .btn-admin-action.logout {
        background: transparent;
        border: 1px solid #ef4444;
        color: #ef4444;
    }

    .btn-admin-action.logout:hover {
        background: #ef4444;
        color: #fff;
    }

    .btn-admin-action svg {
        width: 18px;
        height: 18px;
    }

    .produtos-grid {
        padding: 4rem 1rem;
    }

    .grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 2rem;
    }

    /* Modal de Login */
    .modal-login {
        position: fixed;
        inset: 0;
        z-index: 2000;
        display: none;
        align-items: center;
        justify-content: center;
        padding: 1rem;
    }

    .modal-login.active {
        display: flex;
    }

    .modal-login .modal-overlay {
        position: absolute;
        inset: 0;
        background: rgba(0, 0, 0, 0.95);
        backdrop-filter: blur(10px);
    }

    .modal-login .modal-content {
        position: relative;
        background: #0a0a0a;
        border: 1px solid #2a2a2a;
        border-radius: 24px;
        padding: 2rem;
        max-width: 400px;
        width: 100%;
        z-index: 1;
    }

    .modal-login h2 {
        font-family: "Halenoir", sans-serif;
        color: var(--cor-primaria);
        margin-bottom: 1.5rem;
        text-align: center;
    }

    .modal-login .modal-close {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background: transparent;
        border: none;
        color: #666;
        font-size: 1.5rem;
        cursor: pointer;
        transition: color 0.3s ease;
    }

    .modal-login .modal-close:hover {
        color: #fff;
    }

    .modal-login .form-group {
        margin-bottom: 1.5rem;
    }

    .modal-login label {
        display: block;
        color: #999;
        font-size: 0.9rem;
        margin-bottom: 0.5rem;
    }

    .modal-login input {
        width: 100%;
        background: #0f0f0f;
        border: 1px solid #2a2a2a;
        border-radius: 8px;
        padding: 0.75rem 1rem;
        color: #fff;
        font-size: 1rem;
    }

    .modal-login input:focus {
        outline: none;
        border-color: #fff;
    }

    .modal-login .btn-submit {
        width: 100%;
        background: #fff;
        border: none;
        color: #000;
        padding: 0.875rem;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .modal-login .btn-submit:hover {
        background: #e5e5e5;
    }

    @media (min-width: 768px) {
        .hero-catalogo h1 {
            font-size: 3.5rem;
        }

        .hero-content {
            flex-direction: row;
            justify-content: space-between;
            align-items: center;
        }

        .hero-text {
            text-align: left;
        }

        .hero-actions {
            justify-content: flex-end;
        }
    }
</style>

<script>
    import { authStore } from '../lib/authStore';
    import { productsStore } from '../lib/productsStore';

    const btnLogin = document.getElementById('btn-login');
    const btnLogout = document.getElementById('btn-logout');
    const btnCriarProduto = document.getElementById('btn-criar-produto');
    const btnGerirCategorias = document.getElementById('btn-gerir-categorias');
    const adminMenu = document.getElementById('admin-menu');
    const modalLogin = document.getElementById('modal-login');
    const formLogin = document.getElementById('form-login') as HTMLFormElement;
    const produtosContainer = document.getElementById('produtos-container');

    // Verificar autenticação
    function checkAuth() {
        const isAuth = authStore.isAuthenticated();
        if (btnLogin && adminMenu) {
            btnLogin.style.display = isAuth ? 'none' : 'inline-flex';
            adminMenu.style.display = isAuth ? 'flex' : 'none';
        }
    }

    // Carregar produtos
    function carregarProdutos() {
        const produtos = productsStore.getProducts();
        if (!produtosContainer) return;

        if (produtos.length === 0) {
            produtosContainer.innerHTML = `
                <div style="grid-column: 1/-1; text-align: center; padding: 4rem 1rem; color: #666;">
                    <svg width="80" height="80" viewBox="0 0 24 24" fill="none" style="margin: 0 auto 1rem; opacity: 0.3;">
                        <path d="M21 16V8C21 6.89543 20.1046 6 19 6H5C3.89543 6 3 6.89543 3 8V16C3 17.1046 3.89543 18 5 18H19C20.1046 18 21 17.1046 21 16Z" stroke="currentColor" stroke-width="2"/>
                    </svg>
                    <p>Nenhum produto cadastrado ainda</p>
                </div>
            `;
            return;
        }

        produtosContainer.innerHTML = '';
        produtos.forEach(produto => {
            const card = document.createElement('div');
            card.innerHTML = createProductCard(produto);
            produtosContainer.appendChild(card.firstElementChild!);
        });

        // Adicionar event listeners aos cards
        produtosContainer.querySelectorAll('.produto-card').forEach(card => {
            card.addEventListener('click', () => {
                const element = card as HTMLElement;
                const produto = {
                    id: element.dataset.produtoId,
                    codigo: element.dataset.produtoCodigo,
                    nome: element.dataset.produtoNome,
                    descricao: element.dataset.produtoDescricao,
                    preco: element.dataset.produtoPreco,
                    condicao: element.dataset.produtoCondicao,
                    bateria: element.dataset.produtoBateria,
                    categoria: element.dataset.produtoCategoria,
                    imagens: JSON.parse(element.dataset.produtoImagens || '[]')
                };
                (window as any).abrirModalProduto(produto);
            });
        });
    }

    function createProductCard(produto: any) {
        const precoFormatado = new Intl.NumberFormat('pt-BR', { 
            style: 'currency', 
            currency: 'BRL' 
        }).format(produto.preco);

        const bateriaWidth = (produto.bateria / 100) * 14;

        return `
            <article class="produto-card" 
                data-produto-id="${produto.id}"
                data-produto-codigo="${produto.codigo}"
                data-produto-nome="${produto.nome}"
                data-produto-descricao="${produto.descricao}"
                data-produto-preco="${precoFormatado}"
                data-produto-condicao="${produto.condicao}"
                data-produto-bateria="${produto.bateria}"
                data-produto-categoria="${produto.categoria}"
                data-produto-imagens='${JSON.stringify(produto.imagens)}'>
                <div class="produto-image">
                    <div class="image-placeholder">
                        <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M21 16V8C21 6.89543 20.1046 6 19 6H5C3.89543 6 3 6.89543 3 8V16C3 17.1046 3.89543 18 5 18H19C20.1046 18 21 17.1046 21 16Z" stroke="currentColor" stroke-width="2"/>
                            <path d="M9 12L12 9L15 12" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                        </svg>
                    </div>
                    <span class="condicao-badge ${produto.condicao.toLowerCase()}">${produto.condicao}</span>
                    <div class="bateria-indicator">
                        <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <rect x="2" y="7" width="18" height="10" rx="2" stroke="currentColor" stroke-width="2"/>
                            <path d="M20 10H22V14H20" stroke="currentColor" stroke-width="2"/>
                            <rect x="4" y="9" width="${bateriaWidth}" height="6" rx="1" fill="currentColor"/>
                        </svg>
                        <span>${produto.bateria}%</span>
                    </div>
                </div>
                <div class="produto-info">
                    <span class="categoria-tag">${produto.categoria}</span>
                    <h3>${produto.nome}</h3>
                    <p class="descricao">${produto.descricao}</p>
                    <div class="produto-footer">
                        <span class="preco">${precoFormatado}</span>
                        <button class="btn-detalhes">Ver detalhes</button>
                    </div>
                </div>
            </article>
        `;
    }

    // Login
    btnLogin?.addEventListener('click', () => {
        modalLogin?.classList.add('active');
    });

    formLogin?.addEventListener('submit', (e) => {
        e.preventDefault();
        const email = (document.getElementById('login-email') as HTMLInputElement).value;
        const password = (document.getElementById('login-password') as HTMLInputElement).value;

        if (authStore.login(email, password)) {
            modalLogin?.classList.remove('active');
            formLogin.reset();
            checkAuth();
        } else {
            alert('Credenciais inválidas!');
        }
    });

    // Logout
    btnLogout?.addEventListener('click', () => {
        authStore.logout();
        checkAuth();
    });

    // Abrir formulários
    btnCriarProduto?.addEventListener('click', () => {
        (window as any).abrirFormProduto();
    });

    btnGerirCategorias?.addEventListener('click', () => {
        (window as any).abrirGerirCategorias();
    });

    // Fechar modal de login
    modalLogin?.querySelector('.modal-close')?.addEventListener('click', () => {
        modalLogin.classList.remove('active');
    });

    modalLogin?.querySelector('.modal-overlay')?.addEventListener('click', () => {
        modalLogin.classList.remove('active');
    });

    // Inicializar
    checkAuth();
    carregarProdutos();
</script>

<style is:inline>
    /* Estilos dos cards inline para funcionarem com JS */
    .produto-card {
        background: #0a0a0a;
        border: 1px solid #1a1a1a;
        border-radius: 16px;
        overflow: hidden;
        transition: all 0.3s ease;
        cursor: pointer;
    }

    .produto-card:hover {
        transform: translateY(-4px);
        border-color: #2a2a2a;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4);
    }

    .produto-image {
        position: relative;
        aspect-ratio: 1;
        background: linear-gradient(135deg, #1a1a1a 0%, #0f0f0f 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        border-bottom: 1px solid #1a1a1a;
    }

    .image-placeholder {
        width: 80px;
        height: 80px;
        color: #333;
    }

    .condicao-badge {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background: rgba(255, 255, 255, 0.95);
        color: #000;
        padding: 0.35rem 0.75rem;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 600;
    }

    .condicao-badge.novo {
        background: linear-gradient(135deg, #22c55e, #16a34a);
        color: #fff;
    }

    .condicao-badge.seminovo {
        background: linear-gradient(135deg, #3b82f6, #2563eb);
        color: #fff;
    }

    .bateria-indicator {
        position: absolute;
        bottom: 1rem;
        right: 1rem;
        display: flex;
        align-items: center;
        gap: 0.35rem;
        background: rgba(0, 0, 0, 0.7);
        backdrop-filter: blur(10px);
        padding: 0.4rem 0.7rem;
        border-radius: 20px;
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .bateria-indicator svg {
        width: 20px;
        height: 20px;
        color: #22c55e;
    }

    .bateria-indicator span {
        font-size: 0.75rem;
        font-weight: 600;
        color: #fff;
    }

    .produto-info {
        padding: 1.5rem;
    }

    .categoria-tag {
        display: inline-block;
        font-size: 0.7rem;
        color: #888;
        background: #1a1a1a;
        padding: 0.25rem 0.6rem;
        border-radius: 12px;
        margin-bottom: 0.75rem;
        font-weight: 500;
        letter-spacing: 0.05em;
    }

    .produto-info h3 {
        font-size: 1.1rem;
        color: var(--cor-primaria);
        margin-bottom: 0.5rem;
        font-weight: 600;
    }

    .descricao {
        font-size: 0.9rem;
        color: #777;
        margin-bottom: 1rem;
        line-height: 1.4;
    }

    .produto-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 1rem;
    }

    .preco {
        font-family: "Halenoir", sans-serif;
        font-size: 1.3rem;
        color: var(--cor-primaria);
        font-weight: 700;
    }

    .btn-detalhes {
        background: transparent;
        border: 1px solid #2a2a2a;
        color: #fff;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        font-size: 0.85rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .btn-detalhes:hover {
        background: #fff;
        color: #000;
        border-color: #fff;
    }
</style>