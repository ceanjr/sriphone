---
const menuItems = [
  { title: 'Dashboard', icon: 'layout-dashboard', href: '/admin/dashboard' },
  { title: 'Produtos', icon: 'package', href: '/admin/produtos' },
  { title: 'Categorias', icon: 'folder-tree', href: '/admin/categorias' },
];
const currentPath = Astro.url.pathname;
---

<header class="mobile-nav">
  <div class="mobile-nav-header">
    <div class="mobile-nav-brand">
      <div class="mobile-nav-logo">
        <img src="/images/logo-fundo.webp" alt="Sr. IPHONE Logo" />
      </div>
      <div class="mobile-nav-text">
        <p>Painel Admin</p>
        <span>Gestão administrativa</span>
      </div>
    </div>

    <button
      type="button"
      id="mobile-menu-btn"
      class="mobile-menu-btn hidden"
      aria-label="Abrir menu"
    >
      <svg id="menu-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M4 6h16M4 12h16M4 18h16"></path>
      </svg>
      <svg
        id="close-icon"
        class="hidden"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
  </div>

  <!-- Menu Dropdown -->
  <div id="mobile-menu" class="mobile-menu-dropdown hidden">
    <nav class="mobile-menu-nav">
      {
        menuItems.map((item) => {
          const isActive =
            currentPath === item.href ||
            currentPath.startsWith(item.href + '/');
          return (
            <a
              href={item.href}
              class={`mobile-menu-item ${isActive ? 'active' : ''}`}
            >
              <span class="mobile-menu-icon">
                <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <circle cx="12" cy="12" r="10" stroke-width="2" />
                </svg>
              </span>
              <span>{item.title}</span>
              {isActive && <span class="mobile-menu-badge">ativo</span>}
            </a>
          );
        })
      }

      <!-- Link Catálogo -->
      <a
        href="/catalogo"
        target="_blank"
        rel="noopener noreferrer"
        class="mobile-menu-item"
      >
        <span class="mobile-menu-icon">
          <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
            ></path>
          </svg>
        </span>
        <span>Ver Catálogo</span>
      </a>
    </nav>

    <!-- Logout -->
    <div class="mobile-menu-footer">
      <button type="button" id="mobile-logout-btn" class="mobile-logout-btn">
        <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"
          ></path>
        </svg>
        Sair da conta
      </button>
    </div>
  </div>
</header>

<!-- Backdrop -->
<button
  type="button"
  id="mobile-backdrop"
  class="mobile-backdrop hidden"
  aria-label="Fechar menu"></button>

<script is:inline>
  import { authService } from '../../lib/supabase';

  // Aguardar DOM carregar completamente
  document.addEventListener('DOMContentLoaded', () => {
    const menuBtn = document.getElementById('mobile-menu-btn');
    const mobileMenu = document.getElementById('mobile-menu');
    const backdrop = document.getElementById('mobile-backdrop');
    const menuIcon = document.getElementById('menu-icon');
    const closeIcon = document.getElementById('close-icon');
    const logoutBtn = document.getElementById('mobile-logout-btn');

    console.log('MobileNav: Elementos carregados', {
      menuBtn,
      mobileMenu,
      backdrop,
    });

    function toggleMenu() {
      if (!mobileMenu || !backdrop) {
        console.error('MobileNav: Elementos não encontrados');
        return;
      }

      const isOpen = !mobileMenu.classList.contains('hidden');

      console.log('MobileNav: Toggle menu', { isOpen });

      if (isOpen) {
        mobileMenu.classList.add('hidden');
        backdrop.classList.add('hidden');
        menuIcon?.classList.remove('hidden');
        closeIcon?.classList.add('hidden');
        document.body.style.overflow = '';
      } else {
        mobileMenu.classList.remove('hidden');
        backdrop.classList.remove('hidden');
        menuIcon?.classList.add('hidden');
        closeIcon?.classList.remove('hidden');
        document.body.style.overflow = 'hidden';
      }
    }

    menuBtn?.addEventListener('click', (e) => {
      console.log('MobileNav: Botão clicado');
      e.preventDefault();
      e.stopPropagation();
      toggleMenu();
    });

    backdrop?.addEventListener('click', () => {
      console.log('MobileNav: Backdrop clicado');
      toggleMenu();
    });

    logoutBtn?.addEventListener('click', async () => {
      if (confirm('Tem certeza que deseja sair?')) {
        try {
          // Fazer logout no Supabase (limpa localStorage)
          await authService.signOut();

          // Chamar endpoint para limpar cookies do servidor
          await fetch('/api/admin/auth/logout', {
            method: 'POST',
            credentials: 'include',
          });

          // Redirecionar para login
          window.location.href = '/admin/login';
        } catch (error) {
          console.error('Erro ao fazer logout:', error);
          // Mesmo com erro, redirecionar para login
          window.location.href = '/admin/login';
        }
      }
    });
  });
</script>
