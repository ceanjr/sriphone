---
const menuItems = [
  {
    title: 'Dashboard',
    icon: 'layout-dashboard',
    href: '/admin/dashboard',
  },
  {
    title: 'Produtos',
    icon: 'package',
    href: '/admin/produtos',
  },
  {
    title: 'Categorias',
    icon: 'folder-tree',
    href: '/admin/categorias',
  },
  {
    title: 'Banners',
    icon: 'image',
    href: '/admin/banners',
  },
  {
    title: 'Analytics',
    icon: 'bar-chart-3',
    href: '/admin/analytics',
  },
];

const currentPath = Astro.url.pathname;
---

<div class="flex h-full flex-col border-r border-[#2a2a2a] bg-[#0a0a0a]">
  <!-- Logo -->
  <a
    href="/admin/dashboard"
    class="flex h-16 items-center gap-3 border-b border-[#2a2a2a] px-6 transition-opacity hover:opacity-80"
  >
    <div class="relative h-10 w-10 flex-shrink-0">
      <img
        src="/images/logo-fundo.webp"
        alt="Sr. IPHONE Logo"
        class="h-full w-full object-contain"
        width="40"
        height="40"
      />
    </div>
    <div>
      <h1 class="text-lg font-bold text-white">Sr. IPHONE VCA</h1>
      <p class="text-xs text-[#a0a0a0]">Admin</p>
    </div>
  </a>

  <!-- Menu -->
  <nav class="flex-1 space-y-1 p-4">
    {menuItems.map((item) => {
      const isActive = currentPath === item.href || currentPath.startsWith(item.href + '/');
      return (
        <a
          href={item.href}
          class={`flex items-center gap-3 rounded-lg px-3 py-2 text-sm font-medium transition-colors ${
            isActive
              ? 'bg-white/10 text-white'
              : 'text-[#a0a0a0] hover:bg-[#1a1a1a] hover:text-white'
          }`}
        >
          <!-- Icon placeholder - will use SVG inline -->
          <span class="h-5 w-5" aria-hidden="true">
            {item.icon === 'layout-dashboard' && (
              <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
              </svg>
            )}
            {item.icon === 'package' && (
              <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4" />
              </svg>
            )}
            {item.icon === 'folder-tree' && (
              <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z" />
              </svg>
            )}
            {item.icon === 'image' && (
              <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
              </svg>
            )}
            {item.icon === 'bar-chart-3' && (
              <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
              </svg>
            )}
          </span>
          {item.title}
        </a>
      );
    })}

    <div class="my-2 border-t border-[#2a2a2a]"></div>

    <!-- Link para o Catálogo -->
    <a
      href="/catalogo"
      target="_blank"
      rel="noopener noreferrer"
      class="flex items-center gap-3 rounded-lg px-3 py-2 text-sm font-medium text-[#a0a0a0] transition-colors hover:bg-[#1a1a1a] hover:text-white"
    >
      <span class="h-5 w-5" aria-hidden="true">
        <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
        </svg>
      </span>
      Ver Catálogo
    </a>
  </nav>

  <!-- Botão de Logout -->
  <div class="border-t border-[#2a2a2a] p-4">
    <button
      id="logout-btn"
      class="flex w-full items-center gap-3 rounded-lg px-3 py-2 text-sm font-medium text-[#a0a0a0] transition-colors hover:bg-[#1a1a1a] hover:text-white"
    >
      <span class="h-5 w-5" aria-hidden="true">
        <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
        </svg>
      </span>
      Sair
    </button>
  </div>
</div>

<script>
  import { authService } from '../../lib/supabase';

  document.getElementById('logout-btn')?.addEventListener('click', async () => {
    if (confirm('Tem certeza que deseja sair?')) {
      await authService.signOut();
      window.location.href = '/admin/login';
    }
  });
</script>
