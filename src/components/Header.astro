---
// src/components/Header.astro
const currentPath = Astro.url.pathname
const isCatalogPage = currentPath === '/catalogo'
---

<header class="header">
    <div class="container">
        <a href="/">
            <img
                src="/Logo Fundo Preto.svg"
                alt="Sr. IPHONE Logo"
                class="logo"
            />
        </a>
        <nav class="nav">
            {!isCatalogPage && (
                <a href="/catalogo">Catálogo</a>
            )}
            {isCatalogPage && (
                <>
                    <!-- Botão Auth Desktop -->
                    <button id="btn-auth-desktop" class="btn-auth btn-auth-desktop">
                        <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M15 3H19C19.5304 3 20.0391 3.21071 20.4142 3.58579C20.7893 3.96086 21 4.46957 21 5V19C21 19.5304 20.7893 20.0391 20.4142 20.4142C20.0391 20.7893 19.5304 21 19 21H15M10 17L15 12L10 7M15 12H3" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                        <span>Admin</span>
                    </button>
                    
                    <!-- Menu Desktop -->
                    <div id="admin-actions-desktop" class="admin-actions-desktop" style="display: none;">
                        <button id="btn-criar-produto-desktop" class="btn-admin-action">
                            <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M12 5V19M5 12H19" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                            </svg>
                            Novo Produto
                        </button>
                        <button id="btn-gerir-categorias-desktop" class="btn-admin-action">
                            <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M3 7H21M3 12H21M3 17H21" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                            </svg>
                            Categorias
                        </button>
                    </div>

                    <!-- Menu Hamburguer Mobile -->
                    <button id="btn-menu-mobile" class="btn-menu-mobile" style="display: none;">
                        <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M3 12H21M3 6H21M3 18H21" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                        </svg>
                    </button>

                    <!-- Dropdown Mobile -->
                    <div id="dropdown-mobile" class="dropdown-mobile">
                        <button id="btn-criar-produto-mobile" class="dropdown-item">
                            <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M12 5V19M5 12H19" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                            </svg>
                            Novo Produto
                        </button>
                        <button id="btn-gerir-categorias-mobile" class="dropdown-item">
                            <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M3 7H21M3 12H21M3 17H21" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                            </svg>
                            Categorias
                        </button>
                        <button id="btn-sair-mobile" class="dropdown-item">
                            <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M9 21H5C4.46957 21 3.96086 20.7893 3.58579 20.4142C3.21071 20.0391 3 19.5304 3 19V5C3 4.46957 3.21071 3.96086 3.58579 3.58579C3.96086 3.21071 4.46957 3 5 3H9M16 17L21 12M21 12L16 7M21 12H9" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            Sair
                        </button>
                    </div>
                </>
            )}
        </nav>
    </div>
</header>

<style>
    .header {
        background-color: var(--cor-fundo-escuro);
        padding: 1rem 0;
        position: sticky;
        top: 0;
        z-index: 100;
        border-bottom: 1px solid #1a1a1a;
    }

    .container {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .logo {
        height: 34px;
        width: auto;
        transition: opacity 0.3s ease;
    }

    .logo:hover {
        opacity: 0.8;
    }

    .nav {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        position: relative;
    }

    .nav a {
        color: var(--cor-secundaria);
        text-decoration: none;
        font-weight: 500;
        font-size: 0.9rem;
        transition: all 0.3s ease;
        background-color: var(--cor-texto);
        padding: 0.5rem 1rem;
        border-radius: 8px;
    }

    .nav a:hover {
        opacity: 0.8;
        transform: translateY(-1px);
    }

    .btn-auth {
        display: inline-flex;
        align-items: center;
        background: transparent;
        border: 1px solid #2a2a2a;
        color: #fff;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        font-size: 0.9rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        white-space: nowrap;
    }

    .btn-auth:hover {
        background: #fff;
        color: #000;
        border-color: #fff;
    }

    .btn-auth svg {
        width: 18px;
        height: 18px;
    }

    /* Esconder botão auth no mobile quando logado */
    .btn-auth-desktop {
        display: inline-flex;
        
    }

    @media (max-width: 767px) {
        .btn-auth-desktop.hide-mobile {
            display: none;
        }
    }

    /* Menu Desktop */
    .admin-actions-desktop {
        display: none;
        gap: 0.5rem;
    }

    @media (min-width: 768px) {
        .admin-actions-desktop {
            display: flex;
        }
    }

    .btn-admin-action {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        background: #fff;
        border: none;
        color: #000;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        font-size: 0.85rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        white-space: nowrap;
    }

    .btn-admin-action:hover {
        background: #e5e5e5;
        transform: translateY(-1px);
    }

    .btn-admin-action svg {
        width: 16px;
        height: 16px;
    }

    @media (max-width: 767px) {
        .btn-admin-action {
            display: none;
        }
    }

    /* Menu Hamburguer Mobile */
    .btn-menu-mobile {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        background: transparent;
        border: 1px solid #2a2a2a;
        color: #fff;
        width: 40px;
        height: 40px;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    @media (min-width: 768px) {
        .btn-menu-mobile {
            display: none !important;
        }
    }

    .btn-menu-mobile:hover {
        background: #1a1a1a;
        border-color: #fff;
    }

    .btn-menu-mobile svg {
        width: 20px;
        height: 20px;
    }

    /* Dropdown Mobile */
    .dropdown-mobile {
        position: absolute;
        top: calc(100% + 0.5rem);
        right: 0;
        background: #0a0a0a;
        border: 1px solid #2a2a2a;
        border-radius: 12px;
        min-width: 200px;
        display: none;
        flex-direction: column;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
        z-index: 1000;
    }

    .dropdown-mobile.active {
        display: flex;
    }

    .dropdown-item {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        background: transparent;
        border: none;
        color: #fff;
        padding: 1rem 1.25rem;
        font-size: 0.9rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        text-align: left;
        border-bottom: 1px solid #1a1a1a;
    }

    .dropdown-item:last-child {
        border-bottom: none;
    }

    .dropdown-item:hover {
        background: #1a1a1a;
    }

    .dropdown-item svg {
        width: 18px;
        height: 18px;
    }

    @media (min-width: 768px) {
        .logo {
            height: 50px;
        }
        
        .nav a {
            font-size: 1rem;
            padding: 0.5rem 1rem;
        }

        .btn-auth {
            font-size: 1rem;
            padding: 0.625rem 1.25rem;
        }

        .btn-auth svg {
            width: 20px;
            height: 20px;
        }

        .btn-admin-action {
            font-size: 0.9rem;
            padding: 0.625rem 1.25rem;
        }

        .btn-admin-action svg {
            width: 18px;
            height: 18px;
        }
    }
</style>

{isCatalogPage && (
    <script>
        import { authService } from '../lib/supabase'

        const btnAuthDesktop = document.getElementById('btn-auth-desktop')
        const adminActionsDesktop = document.getElementById('admin-actions-desktop')
        const btnMenuMobile = document.getElementById('btn-menu-mobile')
        const dropdownMobile = document.getElementById('dropdown-mobile')
        const btnSairMobile = document.getElementById('btn-sair-mobile')

        async function checkAuth() {
            const session = await authService.getSession()
            
            if (btnAuthDesktop && adminActionsDesktop && btnMenuMobile) {
                if (session) {
                    // Usuário autenticado
                    
                    // Desktop: Mostrar botão Sair
                    btnAuthDesktop.innerHTML = `
                        <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M9 21H5C4.46957 21 3.96086 20.7893 3.58579 20.4142C3.21071 20.0391 3 19.5304 3 19V5C3 4.46957 3.21071 3.96086 3.58579 3.58579C3.96086 3.21071 4.46957 3 5 3H9M16 17L21 12M21 12L16 7M21 12H9" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                        <span>Sair</span>
                    `
                    
                    // Desktop: Mostrar ações admin
                    adminActionsDesktop.style.display = 'flex'
                    
                    // Mobile: Esconder botão auth e mostrar hamburguer
                    btnAuthDesktop.classList.add('hide-mobile')
                    btnMenuMobile.style.display = 'inline-flex'
                    
                    btnAuthDesktop.onclick = async () => {
                        await authService.signOut()
                        window.location.reload()
                    }
                } else {
                    // Usuário não autenticado
                    
                    btnAuthDesktop.innerHTML = `
                        <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M15 3H19C19.5304 3 20.0391 3.21071 20.4142 3.58579C20.7893 3.96086 21 4.46957 21 5V19C21 19.5304 20.7893 20.0391 20.4142 20.4142C20.0391 20.7893 19.5304 21 19 21H15M10 17L15 12L10 7M15 12H3" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                        <span>Entrar</span>
                    `
                    
                    adminActionsDesktop.style.display = 'none'
                    btnAuthDesktop.classList.remove('hide-mobile')
                    btnMenuMobile.style.display = 'none'
                    
                    btnAuthDesktop.onclick = () => {
                        (window as any).abrirModalLogin()
                    }
                }
            }
        }

        // Toggle dropdown mobile
        btnMenuMobile?.addEventListener('click', (e) => {
            e.stopPropagation()
            dropdownMobile?.classList.toggle('active')
        })

        // Fechar dropdown ao clicar fora
        document.addEventListener('click', () => {
            dropdownMobile?.classList.remove('active')
        })

        dropdownMobile?.addEventListener('click', (e) => {
            e.stopPropagation()
        })

        // Inicializar
        checkAuth()

        // Escutar mudanças de autenticação
        authService.onAuthStateChange(() => {
            checkAuth()
        })

        // Botões Desktop
        const btnCriarProdutoDesktop = document.getElementById('btn-criar-produto-desktop')
        const btnGerirCategoriasDesktop = document.getElementById('btn-gerir-categorias-desktop')

        btnCriarProdutoDesktop?.addEventListener('click', () => {
            (window as any).abrirFormProduto()
        })

        btnGerirCategoriasDesktop?.addEventListener('click', () => {
            (window as any).abrirGerirCategorias()
        })

        // Botões Mobile
        const btnCriarProdutoMobile = document.getElementById('btn-criar-produto-mobile')
        const btnGerirCategoriasMobile = document.getElementById('btn-gerir-categorias-mobile')

        btnCriarProdutoMobile?.addEventListener('click', () => {
            dropdownMobile?.classList.remove('active')
            ;(window as any).abrirFormProduto()
        })

        btnGerirCategoriasMobile?.addEventListener('click', () => {
            dropdownMobile?.classList.remove('active')
            ;(window as any).abrirGerirCategorias()
        })

        // Botão Sair Mobile
        btnSairMobile?.addEventListener('click', async () => {
            dropdownMobile?.classList.remove('active')
            await authService.signOut()
            window.location.reload()
        })
    </script>
)}