---
// src/components/FormularioProduto.astro
---

<div id="modal-form-produto" class="modal-form">
    <div class="modal-overlay"></div>
    <div class="modal-content">
        <button class="modal-close" aria-label="Fechar">
            <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
            </svg>
        </button>

        <div class="modal-header">
            <h2>Criar Novo Produto</h2>
        </div>

        <form id="form-produto" class="product-form">
            <!-- Upload de Imagens -->
            <div class="form-section">
                <label class="section-label">Imagens do Produto</label>
                <div class="image-upload-area" id="image-upload-area">
                    <input 
                        type="file" 
                        id="product-images" 
                        accept="image/*" 
                        multiple 
                        hidden
                    />
                    <div class="upload-placeholder">
                        <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M12 5V19M5 12H19" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                        </svg>
                        <span>Clique para adicionar imagens</span>
                        <small>Arraste imagens ou clique para selecionar</small>
                    </div>
                    <div class="image-preview-grid" id="image-preview-grid"></div>
                </div>
            </div>

            <!-- Nome e Código -->
            <div class="form-row">
                <div class="form-group">
                    <label for="produto-nome">Nome do Produto *</label>
                    <input 
                        type="text" 
                        id="produto-nome" 
                        name="nome" 
                        required 
                        placeholder="Ex: iPhone 14 Pro Max"
                    />
                </div>

                <div class="form-group">
                    <label for="produto-codigo">Código *</label>
                    <input 
                        type="text" 
                        id="produto-codigo" 
                        name="codigo" 
                        required 
                        placeholder="Ex: IP14PM256"
                    />
                </div>
            </div>

            <!-- Preço e Bateria -->
            <div class="form-row">
                <div class="form-group">
                    <label for="produto-preco">Preço (R$) *</label>
                    <input 
                        type="number" 
                        id="produto-preco" 
                        name="preco" 
                        required 
                        step="0.01"
                        min="0"
                        placeholder="5499.00"
                    />
                </div>

                <div class="form-group">
                    <label for="produto-bateria">Bateria (%) *</label>
                    <input 
                        type="number" 
                        id="produto-bateria" 
                        name="bateria" 
                        required 
                        min="0"
                        max="100"
                        placeholder="95"
                    />
                </div>
            </div>

            <!-- Condição e Categoria -->
            <div class="form-row">
                <div class="form-group">
                    <label for="produto-condicao">Condição *</label>
                    <select id="produto-condicao" name="condicao" required>
                        <option value="">Selecione...</option>
                        <option value="Novo">Novo</option>
                        <option value="Seminovo">Seminovo</option>
                    </select>
                </div>

                <div class="form-group">
                    <label for="produto-categoria">Categoria *</label>
                    <select id="produto-categoria" name="categoria" required>
                        <option value="">Selecione...</option>
                    </select>
                </div>
            </div>

            <!-- Descrição -->
            <div class="form-group">
                <label for="produto-descricao">Descrição *</label>
                <textarea 
                    id="produto-descricao" 
                    name="descricao" 
                    required 
                    rows="4"
                    placeholder="Descreva os detalhes do produto..."
                ></textarea>
            </div>

            <!-- Botões -->
            <div class="form-actions">
                <button type="button" class="btn-cancel">Cancelar</button>
                <button type="submit" class="btn-submit">Criar Produto</button>
            </div>
        </form>
    </div>
</div>

<style>
    .modal-form {
        position: fixed;
        inset: 0;
        z-index: 2000;
        display: none;
        align-items: center;
        justify-content: center;
        padding: 1rem;
    }

    .modal-form.active {
        display: flex;
    }

    .modal-form .modal-overlay {
        position: absolute;
        inset: 0;
        background: rgba(0, 0, 0, 0.95);
        backdrop-filter: blur(10px);
    }

    .modal-form .modal-content {
        position: relative;
        background: #0a0a0a;
        border: 1px solid #2a2a2a;
        border-radius: 24px;
        max-width: 700px;
        width: 100%;
        max-height: 90vh;
        overflow-y: auto;
        z-index: 1;
        animation: slideUp 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .modal-header {
        padding: 2rem 2rem 1rem;
        border-bottom: 1px solid #1a1a1a;
    }

    .modal-header h2 {
        font-family: "Halenoir", sans-serif;
        font-size: 1.8rem;
        color: var(--cor-primaria);
        margin: 0;
    }

    .modal-close {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background: rgba(0, 0, 0, 0.8);
        border: 1px solid #2a2a2a;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #fff;
        cursor: pointer;
        transition: all 0.3s ease;
        z-index: 10;
    }

    .modal-close:hover {
        background: #fff;
        color: #000;
        transform: rotate(90deg);
    }

    .modal-close svg {
        width: 20px;
        height: 20px;
    }

    .product-form {
        padding: 2rem;
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .form-section {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
    }

    .section-label {
        font-size: 0.9rem;
        font-weight: 600;
        color: #fff;
    }

    .image-upload-area {
        position: relative;
        border: 2px dashed #2a2a2a;
        border-radius: 12px;
        padding: 2rem;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .image-upload-area:hover {
        border-color: #404040;
        background: rgba(255, 255, 255, 0.02);
    }

    .upload-placeholder {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 0.5rem;
        color: #666;
    }

    .upload-placeholder svg {
        width: 48px;
        height: 48px;
    }

    .upload-placeholder span {
        font-weight: 600;
    }

    .upload-placeholder small {
        font-size: 0.85rem;
        color: #555;
    }

    .image-preview-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
        gap: 1rem;
        margin-top: 1rem;
    }

    .image-preview-grid:empty {
        display: none;
    }

    .image-preview-item {
        position: relative;
        aspect-ratio: 1;
        border-radius: 8px;
        overflow: hidden;
        background: #1a1a1a;
    }

    .image-preview-item img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .image-preview-item .remove-image {
        position: absolute;
        top: 0.25rem;
        right: 0.25rem;
        background: rgba(0, 0, 0, 0.8);
        border: none;
        border-radius: 50%;
        width: 24px;
        height: 24px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #fff;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .image-preview-item .remove-image:hover {
        background: #ef4444;
    }

    .form-row {
        display: grid;
        grid-template-columns: 1fr;
        gap: 1rem;
    }

    @media (min-width: 640px) {
        .form-row {
            grid-template-columns: 1fr 1fr;
        }
    }

    .form-group {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .form-group label {
        font-size: 0.9rem;
        font-weight: 500;
        color: #999;
    }

    .form-group input,
    .form-group select,
    .form-group textarea {
        background: #0f0f0f;
        border: 1px solid #2a2a2a;
        border-radius: 8px;
        padding: 0.75rem 1rem;
        color: #fff;
        font-size: 1rem;
        transition: all 0.3s ease;
    }

    .form-group input:focus,
    .form-group select:focus,
    .form-group textarea:focus {
        outline: none;
        border-color: #fff;
        background: #1a1a1a;
    }

    .form-group textarea {
        resize: vertical;
        min-height: 100px;
    }

    .form-actions {
        display: flex;
        gap: 1rem;
        justify-content: flex-end;
        margin-top: 1rem;
        padding-top: 1rem;
        border-top: 1px solid #1a1a1a;
    }

    .btn-cancel,
    .btn-submit {
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .btn-cancel {
        background: transparent;
        border: 1px solid #2a2a2a;
        color: #999;
    }

    .btn-cancel:hover {
        border-color: #fff;
        color: #fff;
    }

    .btn-submit {
        background: #fff;
        border: none;
        color: #000;
    }

    .btn-submit:hover {
        background: #e5e5e5;
        transform: translateY(-2px);
    }
</style>

<script>
    import { productsStore } from '../lib/productsStore';

    const modalForm = document.getElementById('modal-form-produto');
    const form = document.getElementById('form-produto') as HTMLFormElement;
    const imageUploadArea = document.getElementById('image-upload-area');
    const imageInput = document.getElementById('product-images') as HTMLInputElement;
    const imagePreviewGrid = document.getElementById('image-preview-grid');
    const btnCancel = modalForm?.querySelector('.btn-cancel');
    const modalClose = modalForm?.querySelector('.modal-close');
    const selectCategoria = document.getElementById('produto-categoria') as HTMLSelectElement;

    let imagensCarregadas: string[] = [];

    // Carregar categorias
    function carregarCategorias() {
        if (!selectCategoria) return;
        const categorias = productsStore.getCategories();
        selectCategoria.innerHTML = '<option value="">Selecione...</option>';
        categorias.forEach(cat => {
            const option = document.createElement('option');
            option.value = cat.nome;
            option.textContent = cat.nome;
            selectCategoria.appendChild(option);
        });
    }

    // Upload de imagens
    imageUploadArea?.addEventListener('click', () => {
        imageInput?.click();
    });

    imageInput?.addEventListener('change', (e) => {
        const target = e.target as HTMLInputElement;
        const files = target.files;
        if (!files || !imagePreviewGrid) return;

        Array.from(files).forEach(file => {
            const reader = new FileReader();
            reader.onload = (e) => {
                const result = e.target?.result as string;
                imagensCarregadas.push(result);
                renderImagePreview(result, imagensCarregadas.length - 1);
            };
            reader.readAsDataURL(file);
        });
    });

    function renderImagePreview(src: string, index: number) {
        if (!imagePreviewGrid) return;

        const item = document.createElement('div');
        item.className = 'image-preview-item';
        item.innerHTML = `
            <img src="${src}" alt="Preview ${index + 1}">
            <button type="button" class="remove-image" data-index="${index}">×</button>
        `;

        const removeBtn = item.querySelector('.remove-image');
        removeBtn?.addEventListener('click', (e) => {
            e.stopPropagation();
            imagensCarregadas.splice(index, 1);
            renderAllPreviews();
        });

        imagePreviewGrid.appendChild(item);
    }

    function renderAllPreviews() {
        if (!imagePreviewGrid) return;
        imagePreviewGrid.innerHTML = '';
        imagensCarregadas.forEach((src, index) => {
            renderImagePreview(src, index);
        });
    }

    // Submit do formulário
    form?.addEventListener('submit', (e) => {
        e.preventDefault();
        
        const formData = new FormData(form);
        const produto = {
            codigo: formData.get('codigo') as string,
            nome: formData.get('nome') as string,
            descricao: formData.get('descricao') as string,
            preco: parseFloat(formData.get('preco') as string),
            condicao: formData.get('condicao') as string,
            bateria: parseInt(formData.get('bateria') as string),
            categoria: formData.get('categoria') as string,
            imagemPrincipal: imagensCarregadas[0] || '/placeholder.jpg',
            imagens: imagensCarregadas.length > 0 ? imagensCarregadas : ['/placeholder.jpg']
        };

        productsStore.addProduct(produto);
        fecharModal();
        window.location.reload(); // Recarregar para mostrar novo produto
    });

    // Funções de controle do modal
    function abrirModal() {
        modalForm?.classList.add('active');
        const body = document.body as HTMLBodyElement;
        body.style.overflow = 'hidden';
        carregarCategorias();
    }

    function fecharModal() {
        modalForm?.classList.remove('active');
        const body = document.body as HTMLBodyElement;
        body.style.overflow = '';
        form?.reset();
        imagensCarregadas = [];
        if (imagePreviewGrid) imagePreviewGrid.innerHTML = '';
    }

    btnCancel?.addEventListener('click', fecharModal);
    modalClose?.addEventListener('click', fecharModal);
    modalForm?.querySelector('.modal-overlay')?.addEventListener('click', fecharModal);

    // Expor função globalmente
    (window as any).abrirFormProduto = abrirModal;
</script>