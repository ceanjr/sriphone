---
import { supabaseAdmin } from '../lib/supabaseAdmin';

const { data: categorias } = await supabaseAdmin
  .from('categorias')
  .select('*')
  .order('nome');
console.log('[GerirCategorias] Categorias recebidas:', categorias);
---

<script>
  import { criarCategoria, deletarCategoria } from '../lib/crud';

  // Debug visual: logar categorias no navegador
  window.addEventListener('DOMContentLoaded', () => {
    try {
      const categorias = Array.from(
        document.querySelectorAll('[data-delete-cat]'),
      ).map((btn) => btn.getAttribute('data-delete-cat'));
      console.log(
        '[GerirCategorias] IDs das categorias renderizadas:',
        categorias,
      );
    } catch (e) {
      console.log('[GerirCategorias] Erro ao logar categorias:', e);
    }
  });

  const dialog = document.getElementById(
    'categoria-dialog',
  ) as HTMLDialogElement;
  const form = document.getElementById('categoria-form') as HTMLFormElement;
  const nomeInput = document.getElementById(
    'categoria-nome',
  ) as HTMLInputElement;

  document
    .getElementById('nova-categoria-btn')
    ?.addEventListener('click', () => {
      dialog?.showModal();
    });

  document.getElementById('cancel-cat-btn')?.addEventListener('click', () => {
    dialog?.close();
  });

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();

    const result = await criarCategoria(nomeInput.value);

    if (result.success) {
      alert('Categoria criada!');
      location.reload();
    } else {
      alert(result.error || 'Erro ao criar');
    }
  });

  document.querySelectorAll('[data-delete-cat]').forEach((btn) => {
    btn.addEventListener('click', async (e) => {
      const id = (e.target as HTMLElement).dataset.deleteCat;

      if (!id || !confirm('Deletar categoria?')) return;

      const result = await deletarCategoria(id);

      if (result.success) {
        alert('Categoria deletada!');
        location.reload();
      } else {
        alert(result.error || 'Erro ao deletar');
      }
    });
  });
</script>
> Cancelar

<button type="submit" class="px-4 py-2 rounded-lg bg-white text-black">
  Criar
</button>

<script>
  import { criarCategoria, deletarCategoria } from '../lib/crud';

  const dialog = document.getElementById(
    'categoria-dialog',
  ) as HTMLDialogElement;
  const form = document.getElementById('categoria-form') as HTMLFormElement;
  const nomeInput = document.getElementById(
    'categoria-nome',
  ) as HTMLInputElement;

  document
    .getElementById('nova-categoria-btn')
    ?.addEventListener('click', () => {
      dialog?.showModal();
    });

  document.getElementById('cancel-cat-btn')?.addEventListener('click', () => {
    dialog?.close();
  });

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();

    const result = await criarCategoria(nomeInput.value);

    if (result.success) {
      alert('Categoria criada!');
      location.reload();
    } else {
      alert(result.error || 'Erro ao criar');
    }
  });

  document.querySelectorAll('[data-delete-cat]').forEach((btn) => {
    btn.addEventListener('click', async (e) => {
      const id = (e.target as HTMLElement).dataset.deleteCat;

      if (!id || !confirm('Deletar categoria?')) return;

      const result = await deletarCategoria(id);

      if (result.success) {
        alert('Categoria deletada!');
        location.reload();
      } else {
        alert(result.error || 'Erro ao deletar');
      }
    });
  });
</script>
