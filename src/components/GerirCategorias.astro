<div class="mb-8">
  <div class="flex items-center justify-between mb-4">
    <h2 class="text-2xl font-bold">Categorias</h2>
    <button
      id="nova-categoria-btn"
      class="rounded-lg bg-white px-4 py-2 text-sm font-medium text-black hover:bg-gray-200"
    >
      Nova Categoria
    </button>
  </div>

  <div id="categorias-list" class="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
  </div>

  <!-- Dialog -->
  <dialog id="categoria-dialog" class="rounded-lg bg-gray-800 p-6">
    <h3 class="text-xl font-bold mb-4">Nova Categoria</h3>
    <form id="categoria-form" class="space-y-4">
      <input
        type="text"
        id="categoria-nome"
        placeholder="Nome da categoria"
        class="w-full rounded-lg border border-gray-600 bg-gray-700 px-4 py-2 text-white"
        required
      />
      <div class="flex gap-2 justify-end">
        <button
          type="button"
          id="cancel-cat-btn"
          class="px-4 py-2 rounded-lg border border-gray-600"
        >
          Cancelar
        </button>
        <button type="submit" class="px-4 py-2 rounded-lg bg-white text-black">
          Criar
        </button>
      </div>
    </form>
  </dialog>
</div>

<script>
  import { supabase } from '../lib/supabase';
  import { criarCategoria, deletarCategoria } from '../lib/crud';

  async function fetchAndRenderCategorias() {
    const { data, error } = await supabase
      .from('categorias')
      .select('*')
      .order('nome');
    if (error) {
      console.log('[GerirCategorias] Erro ao buscar categorias:', error);
      return;
    }
    const container = document.getElementById('categorias-list');
    container.innerHTML = '';
    (data || []).forEach((cat) => {
      const div = document.createElement('div');
      div.className = 'rounded-lg border border-gray-700 bg-gray-800 p-4';
      div.innerHTML = `
        <div class="flex items-center justify-between">
          <h3 class="font-semibold text-white">${cat.nome}</h3>
          <button class="text-red-400 hover:text-red-300" data-delete-cat="${cat.id}">Deletar</button>
        </div>
      `;
      container.appendChild(div);
    });
    // Adicionar eventos de delete
    container.querySelectorAll('[data-delete-cat]').forEach((btn) => {
      btn.addEventListener('click', async (e) => {
        const id = btn.getAttribute('data-delete-cat');
        if (!id || !confirm('Deletar categoria?')) return;
        const result = await deletarCategoria(id);
        if (result.success) {
          alert('Categoria deletada!');
          fetchAndRenderCategorias();
        } else {
          alert(result.error || 'Erro ao deletar');
        }
      });
    });
    console.log('[GerirCategorias] Categorias renderizadas:', data);
  }

  window.addEventListener('DOMContentLoaded', fetchAndRenderCategorias);

  const dialog = document.getElementById(
    'categoria-dialog',
  ) as HTMLDialogElement;
  const form = document.getElementById('categoria-form') as HTMLFormElement;
  const nomeInput = document.getElementById(
    'categoria-nome',
  ) as HTMLInputElement;

  document
    .getElementById('nova-categoria-btn')
    ?.addEventListener('click', () => {
      dialog?.showModal();
    });

  document.getElementById('cancel-cat-btn')?.addEventListener('click', () => {
    dialog?.close();
  });

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const result = await criarCategoria(nomeInput.value);
    if (result.success) {
      alert('Categoria criada!');
      fetchAndRenderCategorias();
    } else {
      alert(result.error || 'Erro ao criar');
    }
  });
</script>
