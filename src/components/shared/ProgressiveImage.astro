---
// src/components/shared/ProgressiveImage.astro
// Componente de imagem progressiva com fade-in
interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  loading?: 'lazy' | 'eager';
  priority?: boolean;
}

const { 
  src, 
  alt, 
  width = 400, 
  height = 400, 
  loading = 'lazy',
  priority = false 
} = Astro.props;
---

<div class="progressive-image">
  <img
    src={src}
    alt={alt}
    width={width}
    height={height}
    loading={loading}
    decoding="async"
    fetchpriority={priority ? 'high' : 'low'}
    class="progressive-img"
  />
</div>

<style>
  .progressive-image {
    position: relative;
    overflow: hidden;
    background: linear-gradient(135deg, #1a1a1a 0%, #2a2a2a 100%);
  }

  .progressive-img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
  }

  .progressive-img.loaded {
    opacity: 1;
  }

  @media (prefers-reduced-motion: reduce) {
    .progressive-img {
      transition: none;
      opacity: 1;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const images = document.querySelectorAll('.progressive-img');
    
    images.forEach((img) => {
      if (img instanceof HTMLImageElement) {
        if (img.complete) {
          img.classList.add('loaded');
        } else {
          img.addEventListener('load', () => {
            img.classList.add('loaded');
          });
        }
      }
    });
  });
</script>
