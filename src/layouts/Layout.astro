---
// src/layouts/Layout.astro
import '../styles/global.css';
import Analytics from '@vercel/analytics/astro';

interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;

// Critical CSS inline (apenas em produção)
const criticalCSS = `
/* Critical CSS inline - Performance otimizada */
*, *::before, *::after { box-sizing: border-box; margin: 0; padding: 0; }
body { background: #000; color: #fff; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; overflow-x: hidden; }
.header { position: fixed; top: 0; left: 0; right: 0; background: rgba(0, 0, 0, 0.95); backdrop-filter: blur(20px); z-index: 100; border-bottom: 1px solid #1a1a1a; }
.header-container { max-width: 1200px; margin: 0 auto; display: flex; align-items: center; justify-content: space-between; padding: 1rem; }
.logo { display: flex; align-items: center; gap: 0.75rem; text-decoration: none; font-weight: 700; color: #fff; }
.logo img { width: 32px; height: 32px; }
.hero { min-height: 100vh; display: flex; align-items: center; justify-content: center; background: linear-gradient(135deg, #000 0%, #1a1a1a 100%); position: relative; overflow: hidden; }
.hero-content { text-align: center; max-width: 800px; padding: 0 2rem; }
.hero h1 { font-size: clamp(2.5rem, 8vw, 4rem); font-weight: 900; margin-bottom: 1rem; background: linear-gradient(45deg, #fff, #ccc); -webkit-background-clip: text; -webkit-text-fill-color: transparent; background-clip: text; }
.loading { display: flex; flex-direction: column; align-items: center; gap: 1rem; padding: 2rem; color: #666; }
.spinner { width: 40px; height: 40px; border: 3px solid #333; border-top: 3px solid #fff; border-radius: 50%; animation: spin 1s linear infinite; }
@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
@keyframes skeleton-loading { 0% { background-position: 200% 0; } 100% { background-position: -200% 0; } }
.image-skeleton { background: linear-gradient(90deg, #1a1a1a 0%, #2a2a2a 50%, #1a1a1a 100%); background-size: 200% 100%; animation: skeleton-loading 1.5s ease-in-out infinite; }
.container { max-width: 1200px; margin: 0 auto; padding: 0 1rem; }
.sr-only { position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0, 0, 0, 0); white-space: nowrap; border: 0; }
@media (max-width: 768px) { .hero h1 { font-size: 2.5rem; } .header-container { padding: 0.75rem 1rem; } }
`.trim();
---

<!doctype html>
<html lang="pt-br">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
    <meta name="description" content={description} />
    <title>{title}</title>
    
    <!-- Favicon -->
    <link rel="icon" type="image/webp" href="/favicon.webp" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="shortcut icon" href="/favicon.webp" />
    
    <meta name="generator" content={Astro.generator} />

    <!-- PWA Meta Tags -->
    <meta name="mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
    <meta name="apple-mobile-web-app-title" content="Sr. IPHONE" />
    <meta name="application-name" content="Sr. IPHONE" />
    <meta name="theme-color" content="#000000" />
    <meta name="msapplication-TileColor" content="#000000" />
    <meta name="msapplication-tap-highlight" content="no" />
    
    <!-- PWA Manifest -->
    <link rel="manifest" href="/manifest.json" />
    
    <!-- Apple Touch Icons -->
    <link rel="apple-touch-icon" href="/icons/apple-touch-icon.png" />
    <link rel="apple-touch-icon" sizes="152x152" href="/icons/icon-152x152.png" />
    <link rel="apple-touch-icon" sizes="180x180" href="/icons/apple-touch-icon.png" />
    <link rel="apple-touch-icon" sizes="192x192" href="/icons/icon-192x192.png" />

    <!-- Resource hints críticos para performance -->
    <link rel="preconnect" href={import.meta.env.PUBLIC_SUPABASE_URL} crossorigin />
    <link rel="dns-prefetch" href={import.meta.env.PUBLIC_SUPABASE_URL} />
    
    <!-- ✅ OTIMIZAÇÃO: Preconnect para analytics -->
    <link rel="preconnect" href="https://vercel-analytics.com" crossorigin />
    <link rel="dns-prefetch" href="https://vercel-analytics.com" />

    <!-- Prefetch rotas críticas -->
    <link rel="prefetch" href="/catalogo" />
    <link rel="prefetch" href="/api/produtos" />

    <!-- Preload recursos críticos que existem -->
    <link rel="preload" href="/fonts/Halenoir-Bold.otf" as="font" type="font/otf" crossorigin />
    <!-- ✅ OTIMIZAÇÃO: Preload hero image com priority -->
    <link rel="preload" href="/images/Barbudo.webp" as="image" type="image/webp" fetchpriority="high" />
    <link rel="preload" href="/favicon.webp" as="image" />

    <!-- Critical CSS Inline para eliminar render-blocking -->
    {criticalCSS && <style is:inline set:html={criticalCSS} />}

    <!-- Additional SEO -->
    <meta name="robots" content="index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1" />
    <meta name="googlebot" content="index, follow" />
    <meta name="bingbot" content="index, follow" />
    <link rel="alternate" hreflang="pt-br" href={Astro.url.href} />

    <slot name="head" />
  </head>

  <body>
    <slot />

    <!-- Vercel Analytics -->
    <Analytics />

    <!-- Service Worker para cache agressivo e PWA -->
    <script is:inline>
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', () => {
          navigator.serviceWorker.register('/sw.js')
            .then(reg => {
              reg.addEventListener('updatefound', () => {
                const newWorker = reg.installing;
                newWorker.addEventListener('statechange', () => {
                  if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {
                    if (confirm('Nova versão disponível! Atualizar agora?')) {
                      newWorker.postMessage({ action: 'SKIP_WAITING' });
                      window.location.reload();
                    }
                  }
                });
              });
            })
            .catch(() => {}); // Silent fail
        });
      }
    </script>

    <button
      id="layout-back-to-top"
      class="layout-back-to-top"
      aria-label="Voltar ao topo"
    >
      <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M12 19V5M12 5L5 12M12 5L19 12"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
      </svg>
    </button>
  </body>
</html>

<script>
  const btn = document.getElementById('layout-back-to-top');

  if (btn) {
    const toggleVisibility = () => {
      if (window.scrollY > 300) {
        btn.classList.add('visible');
      } else {
        btn.classList.remove('visible');
      }
    };

    const scrollToTop = () => {
      window.scrollTo({ top: 0, behavior: 'smooth' });
    };

    window.addEventListener('scroll', toggleVisibility);
    btn.addEventListener('click', scrollToTop);
  }
</script>

<style>
  .layout-back-to-top {
    position: fixed;
    bottom: 30px;
    right: 30px;
    opacity: 0;
    visibility: hidden;
    transition:
      opacity 0.3s ease,
      visibility 0.3s ease,
      transform 0.3s ease;
    z-index: 1000;
    width: 45px;
    height: 45px;
    border: none;
    background-color: var(--cor-fundo-claro);
    color: var(--cor-secundaria);
    border-radius: 50%;
    cursor: pointer;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);
  }

  .layout-back-to-top.visible {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .layout-back-to-top svg {
    width: 20px;
    height: 20px;
    color: #000;
    stroke: #000;
  }

  /* Oculto em telas pequenas */
  .layout-back-to-top {
    display: none;
  }

  /* Mostra no desktop */
  @media (min-width: 768px) {
    .layout-back-to-top {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .layout-back-to-top:hover {
      transform: translateY(-4px);
      box-shadow: 0 6px 16px rgba(0, 0, 0, 0.6);
    }
  }
</style>
